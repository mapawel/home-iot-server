services:
  api:
    privileged: true
    build:
      context: ./api
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./api:/usr/app/home-iot-server/api
      - /usr/app/home-iot-server/api/node_modules
    env_file:
      - .env
    working_dir: /usr/app/home-iot-server/api
    command: [ "/usr/local/bin/wait-for-it.sh", "rabbitmq:5672", "--", "npm", "run", "start:dev" ]
    ports:
      - 8080:8080
    networks:
      - home_server_net
    depends_on:
      - mysql
      - rabbitmq
  radio-read-provider:
    privileged: true
    build:
      context: ./radio-read-provider
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./radio-read-provider:/usr/app/home-iot-server/radio-read-provider
      - /usr/app/home-iot-server/radio-read-provider/node_modules
    env_file:
      - .env
    working_dir: /usr/app/home-iot-server/radio-read-provider
    command: [ "/usr/local/bin/wait-for-it.sh", "rabbitmq:5672", "--", "npm", "run", "start:dev" ]
    ports:
      - 6000:6000
    networks:
      - home_server_net
    depends_on:
      - mysql
      - rabbitmq
  mysql:
    image: hypriot/rpi-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - home_server_net
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - home_server_net
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}

networks:
  home_server_net:
    driver: bridge

volumes:
  db-data:
  rabbitmq_data: